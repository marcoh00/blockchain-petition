FROM docker.io/node:lts AS builder


COPY . /build
RUN     echo "http_proxy={${http_proxy}}, https_proxy={${https_proxy}}" && \
        npm config set proxy ${http_proxy} && \
        npm config set https-proxy ${https_proxy} && \
        echo "--- npm install shared ---" && \
        cd  /build/shared && npm install && \
        echo "--- npm install hardhat & compile ---" && \
        cd /build/platform && npm install && npx hardhat compile && \
        echo "--- npm install idp ---" && \
        cd /build/idp && npm install && \
        echo "--- tsc idp ---" && \
        npx tsc -p /build/idp/tsconfig.json && \
        echo "--- npm install client ---" && \
        cd /build/client && npm install && \
        echo "--- webpack client ---" && \
        npx webpack

FROM builder AS idp

RUN     useradd -u 1001 -m -s /usr/sbin/nologin idp && \
        cp -r /build/idp/dist /home/idp && \
        cp -r /build/idp/node_modules /home/idp && \
        cp -r /build/idp/entrypoint.sh /home/idp && \
        cd /home/idp && chown -R idp:idp /home/idp && chmod u+x /home/idp/entrypoint.sh && rm -rf /build 

USER idp
WORKDIR /home/idp

EXPOSE 65535

ENTRYPOINT [ "/home/idp/entrypoint.sh" ]
CMD ["sepolia", "/home/idp/database.db", "dist/idp/src/main.js"]

FROM docker.io/nginx:stable AS webapp

COPY --from=builder /build/petitionen/client/dist /usr/share/nginx/html
RUN     rm /etc/nginx/conf.d/default.conf && echo '\
server {\
    listen 80 default_server;\
    listen [::]:80 default_server;\
\
    types {\
        application/wasm         wasm;\
        application/javascript   js;\
        application/json         json;\
        text/html                html htm shtml;\
        application/xhtml+xml    xhtml;\
        application/octet-stream key;\
    }\
\
    location / {\
        root /usr/share/nginx/html;\
    }\
}\
' >> /etc/nginx/conf.d/app.conf